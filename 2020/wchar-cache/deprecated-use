./Genshi-0.7.3/genshi/_speedups.c:113:    out = (PyUnicodeObject*) PyUnicode_FromUnicode(NULL, len);
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:110:		Py_UNICODE_COPY(outp, inp, PyUnicode_GET_SIZE(in) - (inp - PyUnicode_AS_UNICODE(in)));
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:15:#define UNICHR(x) (PyUnicode_AS_UNICODE((PyUnicodeObject*)PyUnicode_DecodeASCII(x, strlen(x), NULL)));
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:58:	Py_UNICODE *inp = PyUnicode_AS_UNICODE(in);
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:59:	const Py_UNICODE *inp_end = PyUnicode_AS_UNICODE(in) + PyUnicode_GET_SIZE(in);
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:79:	out = (PyUnicodeObject*)PyUnicode_FromUnicode(NULL, PyUnicode_GET_SIZE(in) + delta);
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:83:	outp = PyUnicode_AS_UNICODE(out);
./MarkupSafe-1.1.1/src/markupsafe/_speedups.c:84:	inp = PyUnicode_AS_UNICODE(in);
./Pillow-7.1.2/src/_imagingft.c:356:        Py_UNICODE *text = PyUnicode_AS_UNICODE(string);
./Pillow-7.1.2/src/_imagingft.c:357:        Py_ssize_t size = PyUnicode_GET_SIZE(string);
./Pillow-7.1.2/src/display.c:420:        title = PyUnicode_FromStringAndSize(NULL, title_size);
./Pillow-7.1.2/src/display.c:422:            GetWindowTextW(hwnd, PyUnicode_AS_UNICODE(title), title_size+1);
./Pillow-SIMD-7.0.0.post3/src/_imagingft.c:356:        Py_UNICODE *text = PyUnicode_AS_UNICODE(string);
./Pillow-SIMD-7.0.0.post3/src/_imagingft.c:357:        Py_ssize_t size = PyUnicode_GET_SIZE(string);
./Pillow-SIMD-7.0.0.post3/src/display.c:420:        title = PyUnicode_FromStringAndSize(NULL, title_size);
./Pillow-SIMD-7.0.0.post3/src/display.c:422:            GetWindowTextW(hwnd, PyUnicode_AS_UNICODE(title), title_size+1);
./PyICU-2.5/charset.cpp:336:    return PyUnicode_FromUnicode(NULL, 0);
./PyICU-2.5/common.cpp:181:        PyObject *u = PyUnicode_FromUnicode(NULL, len32);
./PyICU-2.5/common.cpp:185:            Py_UNICODE *pchars = PyUnicode_AS_UNICODE(u);
./PyICU-2.5/common.cpp:342:            string.setTo((const UChar *) PyUnicode_AS_UNICODE(object),
./PyICU-2.5/common.cpp:343:                         (int32_t) PyUnicode_GET_SIZE(object));
./PyICU-2.5/common.cpp:346:            int32_t len = (int32_t) PyUnicode_GET_SIZE(object);
./PyICU-2.5/common.cpp:347:            Py_UNICODE *pchars = PyUnicode_AS_UNICODE(object);
./PyICU-2.5/common.cpp:359:                  Py_UNICODE *pchars = PyUnicode_AsUnicodeAndSize(object, &len);
./PyICU-2.5/common.cpp:366:                  Py_UNICODE *pchars = PyUnicode_AsUnicodeAndSize(object, &len);
./PyICU-2.5/layoutengine.cpp:132:        PyObject *key = PyUnicode_FromStringAndSize(NULL, 4);
./PyICU-2.5/layoutengine.cpp:133:        Py_UNICODE *s = PyUnicode_AS_UNICODE(key);
./PyQt5-5.15.0/designer/pluginloader.cpp:199:    memcpy(PyUnicode_AS_UNICODE(dobj), ucs4.constData(),
./PyQt5-5.15.0/designer/pluginloader.cpp:210:    memcpy(PyUnicode_AS_UNICODE(dobj), native_dir.utf16(),
./PyQt5-5.15.0/qmlscene/pluginloader.cpp:356:    memcpy(PyUnicode_AS_UNICODE(plugin_dir_obj), ucs4.constData(),
./PyQt5-5.15.0/qmlscene/pluginloader.cpp:368:    memcpy(PyUnicode_AS_UNICODE(plugin_dir_obj), py_plugin_dir.utf16(),
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:144:    if ((obj = PyUnicode_FromUnicode(NULL, ucs4.size())) == NULL)
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:147:    memcpy(PyUnicode_AS_UNICODE(obj), ucs4.constData(),
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:150:    if ((obj = PyUnicode_FromUnicode(NULL, qstr.length())) == NULL)
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:153:    memcpy(PyUnicode_AS_UNICODE(obj), qstr.utf16(),
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:193:    return QString::fromUcs4((const uint *)PyUnicode_AS_UNICODE(obj),
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:194:            PyUnicode_GET_SIZE(obj));
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:196:    return QString::fromUtf16((const ushort *)PyUnicode_AS_UNICODE(obj),
./PyQt5-5.15.0/qpy/QtCore/qpycore_qstring.cpp:197:            PyUnicode_GET_SIZE(obj));
./Pygments-2.6.1/tests/examplefiles/ceval.c:1574:				Py_UNICODE *s = PyUnicode_AS_UNICODE(v);
./Pygments-2.6.1/tests/examplefiles/ceval.c:1575:				Py_ssize_t len = PyUnicode_GET_SIZE(v);
./apsw-3.9.2-r1/src/apsw.c:1053:      unires=PyUnicode_FromUnicode(NULL, PyUnicode_GET_SIZE(value)+2);
./apsw-3.9.2-r1/src/apsw.c:1056:      res=PyUnicode_AS_UNICODE(unires);
./apsw-3.9.2-r1/src/apsw.c:1058:      memcpy(res, PyUnicode_AS_UNICODE(value), PyUnicode_GET_DATA_SIZE(value));
./apsw-3.9.2-r1/src/apsw.c:1059:      res+=PyUnicode_GET_SIZE(value);
./apsw-3.9.2-r1/src/apsw.c:1062:      res=PyUnicode_AS_UNICODE(unires)+1;
./apsw-3.9.2-r1/src/apsw.c:1063:      left=PyUnicode_GET_SIZE(value);
./apsw-3.9.2-r1/src/apsw.c:1072:				retval=PyUnicode_Resize(&unires, PyUnicode_GET_SIZE(unires)+moveamount),
./apsw-3.9.2-r1/src/apsw.c:1080:	      res=PyUnicode_AS_UNICODE(unires)+(PyUnicode_GET_SIZE(unires)-left-moveamount-1);
./apsw-3.9.2-r1/src/apsw.c:1120:			unires=PyUnicode_FromUnicode(NULL, buflen*2+3),
./apsw-3.9.2-r1/src/apsw.c:1125:      res=PyUnicode_AS_UNICODE(unires);
./apsw-3.9.2-r1/src/pyutil.c:246:          PyObject *res=PyUnicode_FromUnicode(NULL, size);
./apsw-3.9.2-r1/src/pyutil.c:249:          out=PyUnicode_AS_UNICODE(res);
./apsw-3.9.2-r1/src/statementcache.c:234:      if( sc->cache && sc->numentries && ((PyUnicode_CheckExact(query) && PyUnicode_GET_DATA_SIZE(query) < SC_MAXSIZE)
./apsw-3.9.2-r1/src/util.c:179:  size_t strbytes=2*PyUnicode_GET_SIZE(obj);             \
./apsw-3.9.2-r1/src/util.c:180:  const void *strdata=PyUnicode_AS_DATA(obj);            
./astropy-4.0.1.post1/astropy/io/votable/src/tablewriter.c:270:                if ((str_tmp = PyUnicode_AsUnicode(str_val)) == NULL) {
./astropy-4.0.1.post1/astropy/utils/xml/src/iterparse.c:1181:        uinput = PyUnicode_AsUnicode(input_coerce);
./blis-0.4.1/include/numpy/npy_3kcompat.h:84:#define PyUString_GET_SIZE PyUnicode_GET_SIZE
./cbor2-5.1.0/source/module.c:965:            !(_CBOR2_empty_str = PyUnicode_FromStringAndSize(NULL, 0)))
./cffi-1.14.0/c/_cffi_backend.c:107:#  define PyText_GetSize PyUnicode_GetSize
./cffi-1.14.0/c/wchar_helper.h:127:    Py_UNICODE *u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:128:    if (PyUnicode_GET_SIZE(unicode) != 1) {
./cffi-1.14.0/c/wchar_helper.h:130:                PyUnicode_GET_SIZE(unicode));
./cffi-1.14.0/c/wchar_helper.h:148:    Py_UNICODE *u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:149:    if (PyUnicode_GET_SIZE(unicode) == 1) {
./cffi-1.14.0/c/wchar_helper.h:154:    if (PyUnicode_GET_SIZE(unicode) == 2 && IS_SURROGATE(u)) {
./cffi-1.14.0/c/wchar_helper.h:160:            PyUnicode_GET_SIZE(unicode));
./cffi-1.14.0/c/wchar_helper.h:166:    Py_ssize_t length = PyUnicode_GET_SIZE(unicode);
./cffi-1.14.0/c/wchar_helper.h:170:    Py_UNICODE *u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:183:    Py_ssize_t length = PyUnicode_GET_SIZE(unicode);
./cffi-1.14.0/c/wchar_helper.h:187:    Py_UNICODE *u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:202:    Py_ssize_t len = PyUnicode_GET_SIZE(unicode);
./cffi-1.14.0/c/wchar_helper.h:203:    Py_UNICODE *u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:232:    Py_UNICODE *u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:35:    unicode = PyUnicode_FromUnicode(NULL, alloc);
./cffi-1.14.0/c/wchar_helper.h:42:        u = PyUnicode_AS_UNICODE(unicode);
./cffi-1.14.0/c/wchar_helper.h:83:    PyObject *result = PyUnicode_FromUnicode(NULL, size);
./cffi-1.14.0/c/wchar_helper.h:86:        Py_UNICODE *u_base = PyUnicode_AS_UNICODE(result);
./couchbase-3.0.0/src/ext.c:526:        buffer = PyUnicode_AS_DATA(object);
./couchbase-3.0.0/src/ext.c:527:        *length = PyUnicode_GetSize(object);
./cx_Freeze-6.1/source/bases/Win32GUI.c:39:    MessageBoxW(NULL, PyUnicode_AS_UNICODE(message),
./cx_Freeze-6.1/source/bases/Win32GUI.c:40:            PyUnicode_AS_UNICODE(caption), MB_ICONERROR);
./cx_Freeze-6.1/source/bases/Win32Service.c:433:            PyUnicode_AS_UNICODE(fullName), PyUnicode_AS_UNICODE(displayName),
./cx_Freeze-6.1/source/bases/Win32Service.c:435:            SERVICE_ERROR_NORMAL, PyUnicode_AS_UNICODE(command), NULL, NULL,
./cx_Freeze-6.1/source/bases/Win32Service.c:442:        sd.lpDescription = PyUnicode_AS_UNICODE(info.description);
./cx_Freeze-6.1/source/bases/Win32Service.c:497:    serviceHandle = OpenServiceW(managerHandle, PyUnicode_AS_UNICODE(fullName),
./distance/cdistance/distance.c:10:	if ((u = PyUnicode_AS_UNICODE(obj)) == NULL) {
./distance/cdistance/distance.h:20:	#define PyUnicode_GET_LENGTH PyUnicode_GET_SIZE
./faulthandler-3.2/traceback.c:119:    size = PyUnicode_GET_SIZE(text);
./faulthandler-3.2/traceback.c:120:    u = PyUnicode_AS_UNICODE(text);
./gevent-20.6.1/src/gevent/_generated_include/decode_c_string_impl_d183e8a8665c5498c4e62b4d110273b570eeaaef.h:23:        return PyUnicode_FromUnicode(NULL, 0);
./ibm_db-3.0.1/ibm_db.c:1305:                    PyUnicode_GetSize(databaseObj),
./ibm_db-3.0.1/ibm_db.c:1307:                    PyUnicode_GetSize(uidObj),
./ibm_db-3.0.1/ibm_db.c:1309:                    PyUnicode_GetSize(passwordObj));
./ibm_db-3.0.1/ibm_db.c:1452:    int nCharLen = PyUnicode_GET_SIZE(pyobj);
./ibm_db-3.0.1/ibm_db.c:1460:        return (SQLWCHAR*)PyUnicode_AS_UNICODE(pyobj);
./ibm_db-3.0.1/ibm_db.c:5155:                stmt_size = PyUnicode_GetSize(py_stmt);
./ibm_db-3.0.1/ibm_db.c:5489:                    curr->ivalue = PyUnicode_GetSize(bind_data);
./ibm_db-3.0.1/ibm_db.h:46:#define StringObj_Size              PyUnicode_GET_SIZE
./jep-3.9.0/src/main/c/Jep/convert_p2j.c:205:    if (PyUnicode_Check(pyunicode) && PyUnicode_GET_SIZE(pyunicode) == 1) {
./jep-3.9.0/src/main/c/Jep/convert_p2j.c:206:        Py_UNICODE* data = PyUnicode_AS_UNICODE(pyunicode);
./jep-3.9.0/src/main/c/Jep/convert_p2j.c:264:            if (PyUnicode_GET_SIZE(pyunicode) == 1) {
./jep-3.9.0/src/main/c/Jep/convert_p2j.c:265:                Py_UNICODE* data = PyUnicode_AS_UNICODE(pyunicode);
./jep-3.9.0/src/main/c/Jep/jep_util.c:477:            if (PyUnicode_GET_SIZE(param) == 1) {
./leveldb-0.201/leveldb_object.cc:795:		Py_UNICODE* c = PyUnicode_AS_UNICODE(p);
./lxml-4.5.1/src/lxml/includes/etree_defs.h:83:  #define PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
./lxml-4.5.1/src/lxml/includes/etree_defs.h:85:  #define PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
./lxml-4.5.1/src/lxml/parser.pxi:1042:            py_buffer_len = python.PyUnicode_GET_DATA_SIZE(utext)
./lxml-4.5.1/src/lxml/parser.pxi:1043:            c_text = python.PyUnicode_AS_DATA(utext)
./lxml-4.5.1/src/lxml/parser.pxi:1280:            c_data = python.PyUnicode_AS_DATA(data)
./lxml-4.5.1/src/lxml/parser.pxi:1281:            py_buffer_len = python.PyUnicode_GET_DATA_SIZE(data)
./lxml-4.5.1/src/lxml/parser.pxi:1749:            c_len = python.PyUnicode_GET_DATA_SIZE(text)
./lxml-4.5.1/src/lxml/python.pxd:35:    cdef char* PyUnicode_AS_DATA(object ustring)
./lxml-4.5.1/src/lxml/python.pxd:36:    cdef Py_ssize_t PyUnicode_GET_DATA_SIZE(object ustring)
./lxml-4.5.1/src/lxml/python.pxd:37:    cdef Py_ssize_t PyUnicode_GET_SIZE(object ustring)
./matplotlib-3.2.1/src/ft2font_wrapper.cpp:706:        size = PyUnicode_GET_SIZE(textobj);
./matplotlib-3.2.1/src/ft2font_wrapper.cpp:708:        Py_UNICODE *unistr = PyUnicode_AsUnicode(textobj);
./mypy-0.780/mypyc/lib-rt/getargs.c:771:                *p = PyUnicode_AsUnicodeAndSize(arg, &len);
./mypy-0.780/mypyc/lib-rt/getargs.c:786:                *p = PyUnicode_AsUnicodeAndSize(arg, &len);
./mysql-connector-python-8.0.20/src/include/catch23.h:41:    #define PyString_AS_STRING PyUnicode_AS_UNICODE
./mysql-connector-python-8.0.20/src/mysql_capi.c:1980:            PyObject *quoted= PyBytes_FromFormat("'%s'", PyUnicode_AS_DATA(new_value));
./mysql-connector-python-8.0.20/src/mysqlxpb/python.h:53:#define PyString_Size PyUnicode_GetSize
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:110:		Py_UNICODE_COPY(outp, inp, PyUnicode_GET_SIZE(in) - (inp - PyUnicode_AS_UNICODE(in)));
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:15:#define UNICHR(x) (PyUnicode_AS_UNICODE((PyUnicodeObject*)PyUnicode_DecodeASCII(x, strlen(x), NULL)));
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:58:	Py_UNICODE *inp = PyUnicode_AS_UNICODE(in);
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:59:	const Py_UNICODE *inp_end = PyUnicode_AS_UNICODE(in) + PyUnicode_GET_SIZE(in);
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:79:	out = (PyUnicodeObject*)PyUnicode_FromUnicode(NULL, PyUnicode_GET_SIZE(in) + delta);
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:83:	outp = PyUnicode_AS_UNICODE(out);
./pipenv-2020.6.2/pipenv/vendor/markupsafe/_speedups.c:84:	inp = PyUnicode_AS_UNICODE(in);
./pyScss-1.3.7/scss/src/block_locator.c:320:		self->codestr = PyUnicode_AS_UNICODE(codestr);
./pyScss-1.3.7/scss/src/block_locator.c:321:		self->codestr_sz = PyUnicode_GetSize((PyObject*)codestr);
./pyahocorasick-1.4.0/Automaton.c:910:                end = PyUnicode_GET_SIZE(object);
./pyahocorasick-1.4.0/utils.c:178:            *word = (TRIE_LETTER_TYPE*)(PyUnicode_AS_UNICODE(obj));
./pyahocorasick-1.4.0/utils.c:179:            *wordlen = PyUnicode_GET_SIZE(obj);
./pygame-1.9.6/src_c/base.c:1513:        if (PyUnicode_GET_SIZE(op) != 3) {
./pygame-1.9.6/src_c/freetype/ft_unicode.c:53:        const Py_UNICODE *src = PyUnicode_AS_UNICODE(obj);
./pygame-1.9.6/src_c/freetype/ft_unicode.c:57:        len = srclen = PyUnicode_GET_SIZE(obj);
./pygame-1.9.6/src_c/math.c:1599:    attr = PyUnicode_AsUnicode(attr_unicode);
./pygame-1.9.6/src_c/math.c:1679:    attr = PyUnicode_AsUnicode(attr_unicode);
./pygame-1.9.6/src_c/pgcompat.h:50:#define Text_GetSize PyUnicode_GetSize
./pygame-1.9.6/src_c/pgcompat.h:51:#define Text_GET_SIZE PyUnicode_GET_SIZE
./pygame-1.9.6/src_c/pixelcopy.c:137:        if (PyUnicode_GET_SIZE(obj) != 1) {
./pygame-1.9.6/src_c/pixelcopy.c:142:        ch = *PyUnicode_AS_UNICODE(obj);
./pygame-1.9.6/src_c/surface.c:3676:        if (PyUnicode_GET_SIZE(obj) != 1) {
./pygame-1.9.6/src_c/surface.c:3681:        ch = *PyUnicode_AS_UNICODE(obj);
./pyobjc-core-6.2/Modules/objc/objc_super.m:42:                (PyUnicode_GET_SIZE(name) && PyObjC_is_ascii_string(name, "__class__"));
./pyobjc-core-6.2/Modules/objc/objc_support.m:2239:        if (PyUnicode_Check(argument) && PyUnicode_GetSize(argument) == 1) {
./pyobjc-core-6.2/Modules/objc/objc_support.m:2240:            *(int*)datum = (int)(*PyUnicode_AsUnicode(argument));
./pyodbc-4.0.30/src/cnxninfo.cpp:45:    Object bytes(PyUnicode_EncodeUTF8(PyUnicode_AS_UNICODE(p), PyUnicode_GET_SIZE(p), 0));
./pyodbc-4.0.30/src/cnxninfo.cpp:50:    Object bytes(PyUnicode_Check(p) ? PyUnicode_EncodeUTF8(PyUnicode_AS_UNICODE(p), PyUnicode_GET_SIZE(p), 0) : 0);
./pyodbc-4.0.30/src/connection.cpp:189:        ivalue = PyUnicode_AS_UNICODE(value);
./pyodbc-4.0.30/src/errors.cpp:331:    if (!msg || PyUnicode_GetSize(msg.Get()) == 0)
./pyodbc-4.0.30/src/params.cpp:1924:                    int cb = PyUnicode_GET_DATA_SIZE(objCell) / 2;
./pyodbc-4.0.30/src/params.cpp:1927:                    const Py_UNICODE* source = PyUnicode_AS_UNICODE(objCell);
./pyodbc-4.0.30/src/params.cpp:326:        Py_ssize_t len = PyUnicode_GET_SIZE(cell);
./pyodbc-4.0.30/src/params.cpp:387:                memcpy(*outbuf, PyUnicode_AS_DATA(cell), len);
./pyodbc-4.0.30/src/pyodbccompat.cpp:14:    Py_ssize_t cchLHS = PyUnicode_GET_SIZE(lhs);
./pyodbc-4.0.30/src/pyodbccompat.cpp:19:    Py_UNICODE* p = PyUnicode_AS_UNICODE(lhs);
./pyodbc-4.0.30/src/pyodbccompat.h:126:    return (o && PyUnicode_Check(o)) ? PyUnicode_GET_SIZE(o) : 0;
./pyodbc-4.0.30/src/pyodbccompat.h:146:        Py_ssize_t cch = PyUnicode_GET_SIZE(o);
./pyodbc-4.0.30/src/pyodbccompat.h:147:        memcpy(buffer, PyUnicode_AS_UNICODE(o), cch * sizeof(Py_UNICODE));
./pyodbc-4.0.30/src/pyodbccompat.h:86:    return PyUnicode_AS_UNICODE(o);
./pyodbc-4.0.30/src/pyodbcmodule.cpp:1342:    Py_UNICODE* buffer = PyUnicode_AS_UNICODE(result);
./pyodbc-4.0.30/src/pyodbcmodule.cpp:276:        if (PyUnicode_Check(value) && PyUnicode_GET_SIZE(value) == 1)
./pyodbc-4.0.30/src/pyodbcmodule.cpp:277:            chDecimal = PyUnicode_AS_UNICODE(value)[0];
./pyodbc-4.0.30/src/pyodbcmodule.cpp:697:        if (PyUnicode_Check(value) && PyUnicode_GET_SIZE(value) == 1)
./pyodbc-4.0.30/src/pyodbcmodule.cpp:698:            chDecimal = PyUnicode_AS_UNICODE(value)[0];
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1082:    Py_UNICODE *s = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1083:    size_t l = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1237:    strings[0] = PyUnicode_AS_UNICODE(first);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1238:    sizes[0] = PyUnicode_GET_SIZE(first);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1249:      strings[i] = PyUnicode_AS_UNICODE(item);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1250:      sizes[i] = PyUnicode_GET_SIZE(item);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1658:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1659:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1660:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1661:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1776:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1777:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1778:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1779:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1913:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1914:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1915:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:1916:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:726:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:727:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:729:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:730:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:805:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:806:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:812:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:813:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:848:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:849:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:850:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:851:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:900:    len1 = PyUnicode_GET_SIZE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:901:    len2 = PyUnicode_GET_SIZE(arg2);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:902:    string1 = PyUnicode_AS_UNICODE(arg1);
./python-Levenshtein-0.12.0/Levenshtein/_levenshtein.c:903:    string2 = PyUnicode_AS_UNICODE(arg2);
./python-cjson-1.2.2/cjson.c:688:    s = PyUnicode_AS_UNICODE(unicode);
./python-cjson-1.2.2/cjson.c:689:    size = PyUnicode_GET_SIZE(unicode);
./pythonnet-2.4.0/src/runtime/converter.cs:637:                        if (Runtime.PyUnicode_GetSize(value) == 1)
./pythonnet-2.4.0/src/runtime/converter.cs:639:                            op = Runtime.PyUnicode_AsUnicode(value);
./pythonnet-2.4.0/src/runtime/runtime.cs:1462:        internal static long PyUnicode_GetSize(IntPtr ob)
./pythonnet-2.4.0/src/runtime/runtime.cs:1464:            return (long)_PyUnicode_GetSize(ob);
./pythonnet-2.4.0/src/runtime/runtime.cs:1467:        [DllImport(_PythonDll, CallingConvention = CallingConvention.Cdecl, EntryPoint = "PyUnicode_GetSize")]
./pythonnet-2.4.0/src/runtime/runtime.cs:1468:        private static extern IntPtr _PyUnicode_GetSize(IntPtr ob);
./pythonnet-2.4.0/src/runtime/runtime.cs:1471:        internal static extern IntPtr PyUnicode_AsUnicode(IntPtr ob);
./pythonnet-2.4.0/src/runtime/runtime.cs:1496:        internal static long PyUnicode_GetSize(IntPtr ob)
./pythonnet-2.4.0/src/runtime/runtime.cs:1498:            return (long) _PyUnicode_GetSize(ob);
./pythonnet-2.4.0/src/runtime/runtime.cs:1503:        internal static extern IntPtr _PyUnicode_GetSize(IntPtr ob);
./pythonnet-2.4.0/src/runtime/runtime.cs:1507:        internal static extern IntPtr PyUnicode_AsUnicode(IntPtr ob);
./pythonnet-2.4.0/src/runtime/runtime.cs:1545:                IntPtr p = PyUnicode_AsUnicode(op);
./pythonnet-2.4.0/src/runtime/runtime.cs:1546:                int length = (int)PyUnicode_GetSize(op);
./rcssmin-1.0.6/rcssmin.c:1085:#define PyString_GET_SIZE PyUnicode_GET_SIZE
./rcssmin-1.0.6/rcssmin.c:1086:#define PyString_AS_STRING PyUnicode_AS_UNICODE
./regex-2020.6.8/regex_2/_regex.c:17910:        str_info->characters = (void*)PyUnicode_AS_DATA(string);
./regex-2020.6.8/regex_2/_regex.c:17911:        str_info->length = PyUnicode_GET_SIZE(string);
./regex-2020.6.8/regex_2/_regex.c:18475:    length = PyUnicode_GET_SIZE(string);
./regex-2020.6.8/regex_2/_regex.c:18479:    buffer = PyUnicode_AsUnicode(string);
./regex-2020.6.8/regex_2/_regex.c:19372:            joiner = PyUnicode_FromUnicode(NULL, 0);
./regex-2020.6.8/regex_2/_regex.c:19402:        return PyUnicode_FromUnicode(NULL, 0);
./regex-2020.6.8/regex_2/_regex.c:20878:        characters = (Py_UNICODE*)PyUnicode_AS_DATA(item);
./regex-2020.6.8/regex_2/_regex.c:20879:        length = PyUnicode_GET_SIZE(item);
./regex-2020.6.8/regex_3/_regex.c:17994:        str_info->characters = (void*)PyUnicode_AS_DATA(string);
./regex-2020.6.8/regex_3/_regex.c:17995:        str_info->length = PyUnicode_GET_SIZE(string);
./regex-2020.6.8/regex_3/_regex.c:18541:    length = PyUnicode_GET_SIZE(string);
./regex-2020.6.8/regex_3/_regex.c:18548:    buffer = PyUnicode_AsUnicode(string);
./regex-2020.6.8/regex_3/_regex.c:19457:            joiner = PyUnicode_FromUnicode(NULL, 0);
./regex-2020.6.8/regex_3/_regex.c:19487:        return PyUnicode_FromUnicode(NULL, 0);
./regex-2020.6.8/regex_3/_regex.c:21014:        characters = (Py_UNICODE*)PyUnicode_AS_DATA(item);
./regex-2020.6.8/regex_3/_regex.c:21015:        length = PyUnicode_GET_SIZE(item);
./reportlab-3.5.42/src/rl_addons/renderPM/_renderPM.c:1088:		textlen = PyUnicode_GetSize(obj0);
./reportlab-3.5.42/src/rl_addons/renderPM/_renderPM.c:1089:		utext = PyUnicode_AsUnicode(obj0);
./reportlab-3.5.42/src/rl_addons/renderPM/_renderPM.c:868:		textlen = PyUnicode_GetSize(obj0);
./reportlab-3.5.42/src/rl_addons/renderPM/_renderPM.c:869:		utext = PyUnicode_AsUnicode(obj0);
./reportlab-3.5.42/src/rl_addons/rl_accel/_rl_accel.c:879:	n = PyUnicode_GET_SIZE(text);
./reportlab-3.5.42/src/rl_addons/rl_accel/_rl_accel.c:880:	b = PyUnicode_AS_UNICODE(text);
./rjsmin-1.1.0/cext.h:231:#define PyUnicode_GET_LENGTH(x) (PyUnicode_GET_SIZE(x))
./rjsmin-1.1.0/cext.h:232:#define PyUnicode_DATA(x) ((void *)PyUnicode_AS_UNICODE(x))
./rjsmin-1.1.0/cext.h:245:#define PyUnicode_New(size, maxchar) PyUnicode_FromUnicode(NULL, size)
./rjsmin-1.1.0/rjsmin.c:464:#define PyString_GET_SIZE PyUnicode_GET_SIZE
./rjsmin-1.1.0/rjsmin.c:465:#define PyString_AS_STRING PyUnicode_AS_UNICODE
./scandir-1.10.0/_scandir.c:1198:        path = PyUnicode_AsUnicode(self->path);
./scandir-1.10.0/_scandir.c:1224:        return PyUnicode_EncodeMBCS(PyUnicode_AS_UNICODE(self->name),
./scandir-1.10.0/_scandir.c:1225:                                    PyUnicode_GetSize(self->name), "strict");
./scandir-1.10.0/_scandir.c:1234:        return PyUnicode_EncodeMBCS(PyUnicode_AS_UNICODE(self->path),
./scandir-1.10.0/_scandir.c:1235:                                    PyUnicode_GetSize(self->path), "strict");
./scandir-1.10.0/_scandir.c:47:#define PyUnicode_AsUnicodeAndSize(unicode, addr_length) \
./scandir-1.10.0/_scandir.c:48:    PyUnicode_AsUnicode(unicode); *(addr_length) = PyUnicode_GetSize(unicode)
./scandir-1.10.0/_scandir.c:797:        wide = PyUnicode_AsUnicodeAndSize(unicode, &length);
./scandir-1.10.0/_scandir.c:985:    path = PyUnicode_AsUnicode(self->path);
./simplejson-3.17.0/simplejson/_speedups.c:21:#define PyUnicode_DATA(obj) ((void *)(PyUnicode_AS_UNICODE(obj)))
./simplejson-3.17.0/simplejson/_speedups.c:23:#define PyUnicode_GET_LENGTH PyUnicode_GET_SIZE
./simplejson-3.17.0/simplejson/_speedups.c:3335:    JSON_EmptyUnicode = PyUnicode_FromUnicode(NULL, 0);
./spacy-2.2.4/include/numpy/npy_3kcompat.h:84:#define PyUString_GET_SIZE PyUnicode_GET_SIZE
./spacy-2.2.4/spacy/tokenizer.pyx:149:                    # with PyUnicode_AS_DATA, and then maintain a start_byte
./thinc-7.4.1/include/numpy/npy_3kcompat.h:84:#define PyUString_GET_SIZE PyUnicode_GET_SIZE
./urwid-2.1.0/source/str_util.c:484:        ustr = PyUnicode_AS_UNICODE(text);
./urwid-2.1.0/source/str_util.c:663:        ustr = PyUnicode_AS_UNICODE(text);
./urwid-2.1.0/source/str_util.c:749:        ustr = PyUnicode_AS_UNICODE(text);
./wxPython-4.1.0/sip/cpp/sip_corecmodule.cpp:7522:    size_t len = PyUnicode_GET_SIZE(uni);
./wxPython-4.1.0/sip/cpp/sip_corecmodule.cpp:7552://    size_t len = PyUnicode_GET_SIZE(uni);
./wxPython-4.1.0/sip/cpp/sip_corewxArrayString.cpp:91:            size_t len = PyUnicode_GET_SIZE(item);
./wxPython-4.1.0/sip/cpp/sip_corewxString.cpp:74:        size_t len = PyUnicode_GET_SIZE(uni);
./wxPython-4.1.0/sip/siplib/siplib.c:12405:        if (!PyUnicode_Check(obj) || PyUnicode_GET_SIZE(obj) != 1)
./wxPython-4.1.0/sip/siplib/siplib.c:12447:        if (!PyUnicode_Check(obj) || PyUnicode_GET_SIZE(obj) != 1)
./wxPython-4.1.0/sip/siplib/siplib.c:12489:        if (!PyUnicode_Check(obj) || PyUnicode_GET_SIZE(obj) != 1)
./wxPython-4.1.0/sip/siplib/siplib.c:12902:    ulen = PyUnicode_GET_SIZE(obj);
./wxPython-4.1.0/sip/siplib/siplib.c:12975:    if (PyUnicode_GET_SIZE(obj) != 1)
./wxPython-4.1.0/sip/siplib/siplib.c:13046:    ulen = PyUnicode_GET_SIZE(obj);
./wxPython-4.1.0/src/arrays.sip:62:            size_t len = PyUnicode_GET_SIZE(item);
./wxPython-4.1.0/src/string.sip:48:        size_t len = PyUnicode_GET_SIZE(uni);
./wxPython-4.1.0/src/wxpy_api.sip:57:    size_t len = PyUnicode_GET_SIZE(uni);
./wxPython-4.1.0/src/wxpy_api.sip:87://    size_t len = PyUnicode_GET_SIZE(uni);
./xxhash-1.4.3/src/_xxhash.c:163:    retval = PyUnicode_FromStringAndSize(NULL, XXH32_DIGESTSIZE * 2);
./xxhash-1.4.3/src/_xxhash.c:173:    retbuf = PyUnicode_AS_UNICODE(retval);
./xxhash-1.4.3/src/_xxhash.c:275:    retval = PyUnicode_FromStringAndSize(NULL, XXH64_DIGESTSIZE * 2);
./xxhash-1.4.3/src/_xxhash.c:285:    retbuf = PyUnicode_AS_UNICODE(retval);
./xxhash-1.4.3/src/_xxhash.c:459:    retval = PyUnicode_FromStringAndSize(NULL, XXH32_DIGESTSIZE * 2);
./xxhash-1.4.3/src/_xxhash.c:469:    retbuf = PyUnicode_AS_UNICODE(retval);
./xxhash-1.4.3/src/_xxhash.c:814:    retval = PyUnicode_FromStringAndSize(NULL, XXH64_DIGESTSIZE * 2);
./xxhash-1.4.3/src/_xxhash.c:824:    retbuf = PyUnicode_AS_UNICODE(retval);
./zodbpickle-2.0.0/src/zodbpickle/_pickle_27.c:1594:            PyUnicode_AS_UNICODE(args), PyUnicode_GET_SIZE(args));
